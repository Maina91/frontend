/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as DemoMcpTodosRouteImport } from './routes/demo.mcp-todos'
import { Route as OnboardingRegisterRouteImport } from './routes/_onboarding/register'
import { Route as DashboardProfileRouteImport } from './routes/_dashboard/profile'
import { Route as Dashboard_layoutRouteImport } from './routes/_dashboard/__layout'
import { Route as AuthVerifyOtpRouteImport } from './routes/_auth/verify-otp'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as DemoStartServerFuncsRouteImport } from './routes/demo.start.server-funcs'
import { Route as DemoStartApiRequestRouteImport } from './routes/demo.start.api-request'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'
import { ServerRoute as McpServerRouteImport } from './routes/mcp'
import { ServerRoute as ApiMcpTodosServerRouteImport } from './routes/api.mcp-todos'
import { ServerRoute as ApiDemoTqTodosServerRouteImport } from './routes/api.demo-tq-todos'
import { ServerRoute as ApiDemoNamesServerRouteImport } from './routes/api.demo-names'

const rootServerRouteImport = createServerRootRoute()

const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoMcpTodosRoute = DemoMcpTodosRouteImport.update({
  id: '/demo/mcp-todos',
  path: '/demo/mcp-todos',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRegisterRoute = OnboardingRegisterRouteImport.update({
  id: '/_onboarding/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardProfileRoute = DashboardProfileRouteImport.update({
  id: '/_dashboard/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const Dashboard_layoutRoute = Dashboard_layoutRouteImport.update({
  id: '/_dashboard/__layout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyOtpRoute = AuthVerifyOtpRouteImport.update({
  id: '/_auth/verify-otp',
  path: '/verify-otp',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartServerFuncsRoute = DemoStartServerFuncsRouteImport.update({
  id: '/demo/start/server-funcs',
  path: '/demo/start/server-funcs',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoStartApiRequestRoute = DemoStartApiRequestRouteImport.update({
  id: '/demo/start/api-request',
  path: '/demo/start/api-request',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)
const McpServerRoute = McpServerRouteImport.update({
  id: '/mcp',
  path: '/mcp',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMcpTodosServerRoute = ApiMcpTodosServerRouteImport.update({
  id: '/api/mcp-todos',
  path: '/api/mcp-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoTqTodosServerRoute = ApiDemoTqTodosServerRouteImport.update({
  id: '/api/demo-tq-todos',
  path: '/api/demo-tq-todos',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoNamesServerRoute = ApiDemoNamesServerRouteImport.update({
  id: '/api/demo-names',
  path: '/api/demo-names',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof AuthLoginRoute
  '/verify-otp': typeof AuthVerifyOtpRoute
  '/profile': typeof DashboardProfileRoute
  '/register': typeof OnboardingRegisterRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof PublicIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesByTo {
  '/login': typeof AuthLoginRoute
  '/verify-otp': typeof AuthVerifyOtpRoute
  '/profile': typeof DashboardProfileRoute
  '/register': typeof OnboardingRegisterRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/': typeof PublicIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/verify-otp': typeof AuthVerifyOtpRoute
  '/_dashboard/__layout': typeof Dashboard_layoutRoute
  '/_dashboard/profile': typeof DashboardProfileRoute
  '/_onboarding/register': typeof OnboardingRegisterRoute
  '/demo/mcp-todos': typeof DemoMcpTodosRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/_public/': typeof PublicIndexRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
  '/demo/start/api-request': typeof DemoStartApiRequestRoute
  '/demo/start/server-funcs': typeof DemoStartServerFuncsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/verify-otp'
    | '/profile'
    | '/register'
    | '/demo/mcp-todos'
    | '/demo/tanstack-query'
    | '/'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/verify-otp'
    | '/profile'
    | '/register'
    | '/demo/mcp-todos'
    | '/demo/tanstack-query'
    | '/'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  id:
    | '__root__'
    | '/_auth/login'
    | '/_auth/verify-otp'
    | '/_dashboard/__layout'
    | '/_dashboard/profile'
    | '/_onboarding/register'
    | '/demo/mcp-todos'
    | '/demo/tanstack-query'
    | '/_public/'
    | '/demo/form/address'
    | '/demo/form/simple'
    | '/demo/start/api-request'
    | '/demo/start/server-funcs'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthVerifyOtpRoute: typeof AuthVerifyOtpRoute
  Dashboard_layoutRoute: typeof Dashboard_layoutRoute
  DashboardProfileRoute: typeof DashboardProfileRoute
  OnboardingRegisterRoute: typeof OnboardingRegisterRoute
  DemoMcpTodosRoute: typeof DemoMcpTodosRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  PublicIndexRoute: typeof PublicIndexRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
  DemoStartApiRequestRoute: typeof DemoStartApiRequestRoute
  DemoStartServerFuncsRoute: typeof DemoStartServerFuncsRoute
}
export interface FileServerRoutesByFullPath {
  '/mcp': typeof McpServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
}
export interface FileServerRoutesByTo {
  '/mcp': typeof McpServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/mcp': typeof McpServerRoute
  '/api/demo-names': typeof ApiDemoNamesServerRoute
  '/api/demo-tq-todos': typeof ApiDemoTqTodosServerRoute
  '/api/mcp-todos': typeof ApiMcpTodosServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/mcp'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/mcp' | '/api/demo-names' | '/api/demo-tq-todos' | '/api/mcp-todos'
  id:
    | '__root__'
    | '/mcp'
    | '/api/demo-names'
    | '/api/demo-tq-todos'
    | '/api/mcp-todos'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  McpServerRoute: typeof McpServerRoute
  ApiDemoNamesServerRoute: typeof ApiDemoNamesServerRoute
  ApiDemoTqTodosServerRoute: typeof ApiDemoTqTodosServerRoute
  ApiMcpTodosServerRoute: typeof ApiMcpTodosServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/mcp-todos': {
      id: '/demo/mcp-todos'
      path: '/demo/mcp-todos'
      fullPath: '/demo/mcp-todos'
      preLoaderRoute: typeof DemoMcpTodosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/register': {
      id: '/_onboarding/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof OnboardingRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/profile': {
      id: '/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof DashboardProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/__layout': {
      id: '/_dashboard/__layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Dashboard_layoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/verify-otp': {
      id: '/_auth/verify-otp'
      path: '/verify-otp'
      fullPath: '/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/server-funcs': {
      id: '/demo/start/server-funcs'
      path: '/demo/start/server-funcs'
      fullPath: '/demo/start/server-funcs'
      preLoaderRoute: typeof DemoStartServerFuncsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/start/api-request': {
      id: '/demo/start/api-request'
      path: '/demo/start/api-request'
      fullPath: '/demo/start/api-request'
      preLoaderRoute: typeof DemoStartApiRequestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/mcp': {
      id: '/mcp'
      path: '/mcp'
      fullPath: '/mcp'
      preLoaderRoute: typeof McpServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/mcp-todos': {
      id: '/api/mcp-todos'
      path: '/api/mcp-todos'
      fullPath: '/api/mcp-todos'
      preLoaderRoute: typeof ApiMcpTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-tq-todos': {
      id: '/api/demo-tq-todos'
      path: '/api/demo-tq-todos'
      fullPath: '/api/demo-tq-todos'
      preLoaderRoute: typeof ApiDemoTqTodosServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-names': {
      id: '/api/demo-names'
      path: '/api/demo-names'
      fullPath: '/api/demo-names'
      preLoaderRoute: typeof ApiDemoNamesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthVerifyOtpRoute: AuthVerifyOtpRoute,
  Dashboard_layoutRoute: Dashboard_layoutRoute,
  DashboardProfileRoute: DashboardProfileRoute,
  OnboardingRegisterRoute: OnboardingRegisterRoute,
  DemoMcpTodosRoute: DemoMcpTodosRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  PublicIndexRoute: PublicIndexRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
  DemoStartApiRequestRoute: DemoStartApiRequestRoute,
  DemoStartServerFuncsRoute: DemoStartServerFuncsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  McpServerRoute: McpServerRoute,
  ApiDemoNamesServerRoute: ApiDemoNamesServerRoute,
  ApiDemoTqTodosServerRoute: ApiDemoTqTodosServerRoute,
  ApiMcpTodosServerRoute: ApiMcpTodosServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()

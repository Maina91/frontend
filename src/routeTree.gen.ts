/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as PublicIndexRouteImport } from './routes/_public/index'
import { Route as OnboardingRegisterRouteImport } from './routes/_onboarding/register'
import { Route as OnboardingForgotPasswordRouteImport } from './routes/_onboarding/forgot-password'
import { Route as AuthVerifyOtpRouteImport } from './routes/_auth/verify-otp'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as DashboardCustomerIndexRouteImport } from './routes/dashboard/customer/index'
import { Route as DashboardAgentIndexRouteImport } from './routes/dashboard/agent/index'
import { Route as DashboardCustomerProfileRouteImport } from './routes/dashboard/customer/profile'
import { Route as DashboardCustomerInvestmentsRouteImport } from './routes/dashboard/customer/investments'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const PublicIndexRoute = PublicIndexRouteImport.update({
  id: '/_public/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRegisterRoute = OnboardingRegisterRouteImport.update({
  id: '/_onboarding/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingForgotPasswordRoute =
  OnboardingForgotPasswordRouteImport.update({
    id: '/_onboarding/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthVerifyOtpRoute = AuthVerifyOtpRouteImport.update({
  id: '/_auth/verify-otp',
  path: '/verify-otp',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardCustomerIndexRoute = DashboardCustomerIndexRouteImport.update({
  id: '/customer/',
  path: '/customer/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAgentIndexRoute = DashboardAgentIndexRouteImport.update({
  id: '/agent/',
  path: '/agent/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCustomerProfileRoute =
  DashboardCustomerProfileRouteImport.update({
    id: '/customer/profile',
    path: '/customer/profile',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCustomerInvestmentsRoute =
  DashboardCustomerInvestmentsRouteImport.update({
    id: '/customer/investments',
    path: '/customer/investments',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/verify-otp': typeof AuthVerifyOtpRoute
  '/forgot-password': typeof OnboardingForgotPasswordRoute
  '/register': typeof OnboardingRegisterRoute
  '/': typeof PublicIndexRoute
  '/dashboard/customer/investments': typeof DashboardCustomerInvestmentsRoute
  '/dashboard/customer/profile': typeof DashboardCustomerProfileRoute
  '/dashboard/agent': typeof DashboardAgentIndexRoute
  '/dashboard/customer': typeof DashboardCustomerIndexRoute
}
export interface FileRoutesByTo {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/verify-otp': typeof AuthVerifyOtpRoute
  '/forgot-password': typeof OnboardingForgotPasswordRoute
  '/register': typeof OnboardingRegisterRoute
  '/': typeof PublicIndexRoute
  '/dashboard/customer/investments': typeof DashboardCustomerInvestmentsRoute
  '/dashboard/customer/profile': typeof DashboardCustomerProfileRoute
  '/dashboard/agent': typeof DashboardAgentIndexRoute
  '/dashboard/customer': typeof DashboardCustomerIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/verify-otp': typeof AuthVerifyOtpRoute
  '/_onboarding/forgot-password': typeof OnboardingForgotPasswordRoute
  '/_onboarding/register': typeof OnboardingRegisterRoute
  '/_public/': typeof PublicIndexRoute
  '/dashboard/customer/investments': typeof DashboardCustomerInvestmentsRoute
  '/dashboard/customer/profile': typeof DashboardCustomerProfileRoute
  '/dashboard/agent/': typeof DashboardAgentIndexRoute
  '/dashboard/customer/': typeof DashboardCustomerIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/login'
    | '/verify-otp'
    | '/forgot-password'
    | '/register'
    | '/'
    | '/dashboard/customer/investments'
    | '/dashboard/customer/profile'
    | '/dashboard/agent'
    | '/dashboard/customer'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/dashboard'
    | '/login'
    | '/verify-otp'
    | '/forgot-password'
    | '/register'
    | '/'
    | '/dashboard/customer/investments'
    | '/dashboard/customer/profile'
    | '/dashboard/agent'
    | '/dashboard/customer'
  id:
    | '__root__'
    | '/dashboard'
    | '/_auth/login'
    | '/_auth/verify-otp'
    | '/_onboarding/forgot-password'
    | '/_onboarding/register'
    | '/_public/'
    | '/dashboard/customer/investments'
    | '/dashboard/customer/profile'
    | '/dashboard/agent/'
    | '/dashboard/customer/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthVerifyOtpRoute: typeof AuthVerifyOtpRoute
  OnboardingForgotPasswordRoute: typeof OnboardingForgotPasswordRoute
  OnboardingRegisterRoute: typeof OnboardingRegisterRoute
  PublicIndexRoute: typeof PublicIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/register': {
      id: '/_onboarding/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof OnboardingRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_onboarding/forgot-password': {
      id: '/_onboarding/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof OnboardingForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/verify-otp': {
      id: '/_auth/verify-otp'
      path: '/verify-otp'
      fullPath: '/verify-otp'
      preLoaderRoute: typeof AuthVerifyOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/customer/': {
      id: '/dashboard/customer/'
      path: '/customer'
      fullPath: '/dashboard/customer'
      preLoaderRoute: typeof DashboardCustomerIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/agent/': {
      id: '/dashboard/agent/'
      path: '/agent'
      fullPath: '/dashboard/agent'
      preLoaderRoute: typeof DashboardAgentIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/customer/profile': {
      id: '/dashboard/customer/profile'
      path: '/customer/profile'
      fullPath: '/dashboard/customer/profile'
      preLoaderRoute: typeof DashboardCustomerProfileRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/customer/investments': {
      id: '/dashboard/customer/investments'
      path: '/customer/investments'
      fullPath: '/dashboard/customer/investments'
      preLoaderRoute: typeof DashboardCustomerInvestmentsRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardCustomerInvestmentsRoute: typeof DashboardCustomerInvestmentsRoute
  DashboardCustomerProfileRoute: typeof DashboardCustomerProfileRoute
  DashboardAgentIndexRoute: typeof DashboardAgentIndexRoute
  DashboardCustomerIndexRoute: typeof DashboardCustomerIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardCustomerInvestmentsRoute: DashboardCustomerInvestmentsRoute,
  DashboardCustomerProfileRoute: DashboardCustomerProfileRoute,
  DashboardAgentIndexRoute: DashboardAgentIndexRoute,
  DashboardCustomerIndexRoute: DashboardCustomerIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthVerifyOtpRoute: AuthVerifyOtpRoute,
  OnboardingForgotPasswordRoute: OnboardingForgotPasswordRoute,
  OnboardingRegisterRoute: OnboardingRegisterRoute,
  PublicIndexRoute: PublicIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
